version = '0.1.0'

optimizedJar {
    mainClassName = 'finance.omm.score.DaoFund'
    dependsOn(':commons:build')
    dependsOn(':OMMStruct:build')
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        local {
            uri = 'http://localhost:9082/api/v3'
            nid = 0x3
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
	parameters {
		arg('_addressProvider', 'cxa755b2ef6eb46c1e817c636be3c21d26c81fe6cc')
	}
}

test {
    useJUnitPlatform()
}


sourceSets {
	itest {
	    compileClasspath += sourceSets.main.output + configurations.compileClasspath
	    runtimeClasspath += sourceSets.main.output + compileClasspath

	}
}

configurations {
    itestImplementation.extendsFrom implementation
    itestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    compileOnly 'foundation.icon:javaee-api:0.9.1'
    implementation project(':commons')
    implementation project(':OMMStruct')

    // test dependencies
    testImplementation 'foundation.icon:javaee-unittest:0.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.6.0'
    testImplementation 'org.junit.platform:junit-platform-commons:1.7.0'

	testImplementation 'foundation.icon:icon-sdk:2.0.0'
	testImplementation project(':TestUtils')
}

task integrationTest(type: Test, dependsOn: optimizedJar) {
    useJUnitPlatform()
    options {
        testLogging.showStandardStreams = true
        description = 'Runs integration tests.'
        group = 'verification'
        testClassesDirs = sourceSets.intTest.output.classesDirs
        classpath = sourceSets.intTest.runtimeClasspath

        systemProperty 'url', scoreTest.url
        systemProperty 'nid', scoreTest.nid

        systemProperty 'keyStore', scoreTest.keystoreName
        systemProperty 'keyPassword', scoreTest.keystorePass

        systemProperty 'tester.keyStore', scoreTest.get("tester.keystoreName")
        systemProperty 'tester.keyPassword', scoreTest.get("tester.keystorePass")

        systemProperty 'address', "cxc79098b45adc86e0a49db68212a4fa34104a91c0"
        systemProperty 'isUpdate', "true"
        systemProperty 'scoreFilePath',//path to zip project.tasks.optimizedJar.outputJarName

        project.extensions.deployJar.arguments.each { arg -> systemProperty 'params.' + arg.name, arg.value }

    }

}