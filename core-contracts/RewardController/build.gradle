version = '0.0.1'

dependencies {
    implementation project(':libs:Math')
    implementation project(':libs:OMMStruct')
}

optimizedJar {
    mainClassName = 'finance.omm.score.core.reward.RewardController'
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

deployJar {
    endpoints {
        sejong {
            uri = 'https://sejong.net.solidwallet.io/api/v3'
//            to = 'cxe2be18edcc3b40fa4f1d0e6f9090cf06be9d0211'
            nid = 0x53
        }
        mainnet {
            uri = 'https://ctz.solidwallet.io/api/v3'
            nid = 0x1
        }
    }
    keystore = rootProject.hasProperty('keystoreName') ? "$keystoreName" : ''
    password = rootProject.hasProperty('keystorePass') ? "$keystorePass" : ''
    parameters {
        arg('startTimestamp', '1581724800')
    }
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()

    options {
        testLogging.showStandardStreams = true
        systemProperty 'url', scoreTest.url
        systemProperty 'nid', scoreTest.nid
        systemProperty 'keyStore', scoreTest.default.keyStore
        systemProperty 'keyPassword', scoreTest.default.resolvedKeyPassword
//        systemProperty 'address', "cx9d9febc3a11565e26b6a0dbea2a4c3fd402bae86"
//        systemProperty 'isUpdate', "true"
        dependsOn optimizedJar
        systemProperty 'scoreFilePath', project.tasks.optimizedJar.outputJarName
        project.extensions.deployJar.arguments.each {
            arg -> systemProperty 'params.' + arg.name, arg.value
        }

        //for foundation.icon.btp.test.ScoreIntegrationTest
        systemProperty 'tester.keyStore', scoreTest.tester.keyStore
        systemProperty 'tester.keySecret', scoreTest.tester.keySecret

        //for bmv-mock client
        systemProperty 'bmv-mock.url', scoreTest.url
        systemProperty 'bmv-mock.nid', scoreTest.nid
        systemProperty 'bmv-mock.keyStore', scoreTest.default.keyStore
        systemProperty 'bmv-mock.keyPassword', scoreTest.default.resolvedKeyPassword
//        systemProperty 'bmv-mock.address', "cx0f549056aeebed9c06833bebfe8b17113958532f"
//        systemProperty 'bmv-mock.isUpdate', "true"
        dependsOn ":test-lib:optimizedJarMockBMV"
        systemProperty 'bmv-mock.scoreFilePath', tasks.getByPath(":test-lib:optimizedJarMockBMV").outputJarName

        //for bmv-mock client
        systemProperty 'bsh-mock.url', scoreTest.url
        systemProperty 'bsh-mock.nid', scoreTest.nid
        systemProperty 'bsh-mock.keyStore', scoreTest.default.keyStore
        systemProperty 'bsh-mock.keyPassword', scoreTest.default.resolvedKeyPassword
//        systemProperty 'bsh-mock.address', "cx47853622a461b34885c42d74e8354b03a3e88a42"
//        systemProperty 'bsh-mock.isUpdate', "true"
        dependsOn ":test-lib:optimizedJarMockBSH"
        systemProperty 'bsh-mock.scoreFilePath', tasks.getByPath(":test-lib:optimizedJarMockBSH").outputJarName
    }
}
